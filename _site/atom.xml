<?xml version='1.0'?>
<feed xmlns='http://www.w3.org/2005/Atom'>
	<title>Nan Li's Lambda Nest</title>
	<link href='https://ln613.github.io/blog/'/>
	<link type='application/atom+xml' rel='self' href='https://ln613.github.io/blog/atom.xml'/>
	<updated>2018-01-29T04:59:54-08:00</updated>
	<id>https://ln613.github.io/blog/</id>

	<author>
		<name>Nan Li</name>
		<email>ln613@hotmail.com</email>
	</author>

	
	<entry>
		<title>Ensure redux store immutability with ramda's assocPath/lensPath function</title>
		<link type='text/html' href='https://ln613.github.io/blog/2018/01/15/ensure-redux-store-immutability-with-ramda-assocPath-lensPath-function'/>
		<id>https://ln613.github.io/blog/2018/01/15/ensure-redux-store-immutability-with-ramda-assocPath-lensPath-function</id>
		<updated>2018-01-15T00:00:00-08:00</updated>

		<author>
			<name>Nan Li</name>
			<uri>https://ln613.github.io/blog/</uri>
		</author>

		<content type='html'>&lt;script src=&quot;/assets/js/svg.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  window.onload = function () {
    tree([2,2,1,1,2,,1,1,,2,1,,,,,,,,,1,1]);
  }
&lt;/script&gt;

&lt;p&gt;When working with react local state or redux store, you have to keep the old state immutable and generate new state.&lt;/p&gt;

&lt;p&gt;If you change the old state directly, your UI components will not be notified of the changes, thus the UI will not change.&lt;/p&gt;

</content>
	</entry>
  
</feed>